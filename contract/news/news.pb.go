// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.3
// source: news/news.proto

package newsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Sort int32

const (
	Sort_UNSORTED         Sort = 0
	Sort_PUBLISH_AT_NEW   Sort = 1
	Sort_PUBLISH_AT_OLD   Sort = 2
	Sort_POPULAR          Sort = 3
	Sort_UNPOPULAR        Sort = 4
	Sort_RECOMMEND        Sort = 5
	Sort_FAVORITE_SOURCES Sort = 6
)

// Enum value maps for Sort.
var (
	Sort_name = map[int32]string{
		0: "UNSORTED",
		1: "PUBLISH_AT_NEW",
		2: "PUBLISH_AT_OLD",
		3: "POPULAR",
		4: "UNPOPULAR",
		5: "RECOMMEND",
		6: "FAVORITE_SOURCES",
	}
	Sort_value = map[string]int32{
		"UNSORTED":         0,
		"PUBLISH_AT_NEW":   1,
		"PUBLISH_AT_OLD":   2,
		"POPULAR":          3,
		"UNPOPULAR":        4,
		"RECOMMEND":        5,
		"FAVORITE_SOURCES": 6,
	}
)

func (x Sort) Enum() *Sort {
	p := new(Sort)
	*p = x
	return p
}

func (x Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_news_news_proto_enumTypes[0].Descriptor()
}

func (Sort) Type() protoreflect.EnumType {
	return &file_news_news_proto_enumTypes[0]
}

func (x Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Sort) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Sort(num)
	return nil
}

// Deprecated: Use Sort.Descriptor instead.
func (Sort) EnumDescriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{0}
}

type ArticleMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId  *int32                 `protobuf:"varint,1,req,name=sourceId" json:"sourceId,omitempty"`
	PublishAt *timestamppb.Timestamp `protobuf:"bytes,3,req,name=publishAt" json:"publishAt,omitempty"`
	Tags      []uint32               `protobuf:"varint,4,rep,name=tags" json:"tags,omitempty"`
	Image     []byte                 `protobuf:"bytes,5,req,name=image" json:"image,omitempty"`
}

func (x *ArticleMeta) Reset() {
	*x = ArticleMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleMeta) ProtoMessage() {}

func (x *ArticleMeta) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleMeta.ProtoReflect.Descriptor instead.
func (*ArticleMeta) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{0}
}

func (x *ArticleMeta) GetSourceId() int32 {
	if x != nil && x.SourceId != nil {
		return *x.SourceId
	}
	return 0
}

func (x *ArticleMeta) GetPublishAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishAt
	}
	return nil
}

func (x *ArticleMeta) GetTags() []uint32 {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ArticleMeta) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

type Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId  *int32                 `protobuf:"varint,1,req,name=sourceId" json:"sourceId,omitempty"`
	PublishAt *timestamppb.Timestamp `protobuf:"bytes,2,req,name=publishAt" json:"publishAt,omitempty"`
	Tags      []uint32               `protobuf:"varint,3,rep,name=tags" json:"tags,omitempty"`
	Image     []byte                 `protobuf:"bytes,4,req,name=image" json:"image,omitempty"`
}

func (x *Source) Reset() {
	*x = Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{1}
}

func (x *Source) GetSourceId() int32 {
	if x != nil && x.SourceId != nil {
		return *x.SourceId
	}
	return 0
}

func (x *Source) GetPublishAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishAt
	}
	return nil
}

func (x *Source) GetTags() []uint32 {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Source) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   []byte  `protobuf:"bytes,2,req,name=id" json:"id,omitempty"`
	Name *string `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{2}
}

func (x *Filter) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Filter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type InitParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId []byte `protobuf:"bytes,1,req,name=userId" json:"userId,omitempty"`
}

func (x *InitParams) Reset() {
	*x = InitParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitParams) ProtoMessage() {}

func (x *InitParams) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitParams.ProtoReflect.Descriptor instead.
func (*InitParams) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{3}
}

func (x *InitParams) GetUserId() []byte {
	if x != nil {
		return x.UserId
	}
	return nil
}

type InitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters   [][]byte `protobuf:"bytes,1,rep,name=filters" json:"filters,omitempty"`
	Favorites [][]byte `protobuf:"bytes,2,rep,name=favorites" json:"favorites,omitempty"`
}

func (x *InitResponse) Reset() {
	*x = InitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitResponse) ProtoMessage() {}

func (x *InitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitResponse.ProtoReflect.Descriptor instead.
func (*InitResponse) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{4}
}

func (x *InitResponse) GetFilters() [][]byte {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *InitResponse) GetFavorites() [][]byte {
	if x != nil {
		return x.Favorites
	}
	return nil
}

type GetArticleParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang *uint32 `protobuf:"varint,1,req,name=lang" json:"lang,omitempty"`
	Id   []byte  `protobuf:"bytes,2,req,name=id" json:"id,omitempty"`
}

func (x *GetArticleParams) Reset() {
	*x = GetArticleParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleParams) ProtoMessage() {}

func (x *GetArticleParams) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleParams.ProtoReflect.Descriptor instead.
func (*GetArticleParams) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{5}
}

func (x *GetArticleParams) GetLang() uint32 {
	if x != nil && x.Lang != nil {
		return *x.Lang
	}
	return 0
}

func (x *GetArticleParams) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetArticleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta  *ArticleMeta `protobuf:"bytes,2,req,name=meta" json:"meta,omitempty"`
	Title *string      `protobuf:"bytes,3,req,name=title" json:"title,omitempty"`
}

func (x *GetArticleResponse) Reset() {
	*x = GetArticleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleResponse) ProtoMessage() {}

func (x *GetArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleResponse.ProtoReflect.Descriptor instead.
func (*GetArticleResponse) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{6}
}

func (x *GetArticleResponse) GetMeta() *ArticleMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetArticleResponse) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

type GetArticleContentParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta  *ArticleMeta `protobuf:"bytes,2,req,name=meta" json:"meta,omitempty"`
	Title *string      `protobuf:"bytes,3,req,name=title" json:"title,omitempty"`
}

func (x *GetArticleContentParams) Reset() {
	*x = GetArticleContentParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleContentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleContentParams) ProtoMessage() {}

func (x *GetArticleContentParams) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleContentParams.ProtoReflect.Descriptor instead.
func (*GetArticleContentParams) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{7}
}

func (x *GetArticleContentParams) GetMeta() *ArticleMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetArticleContentParams) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

type GetArticleContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content *string `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
}

func (x *GetArticleContentResponse) Reset() {
	*x = GetArticleContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleContentResponse) ProtoMessage() {}

func (x *GetArticleContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleContentResponse.ProtoReflect.Descriptor instead.
func (*GetArticleContentResponse) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{8}
}

func (x *GetArticleContentResponse) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

type GetFiltersParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId []byte `protobuf:"bytes,1,req,name=userId" json:"userId,omitempty"`
}

func (x *GetFiltersParams) Reset() {
	*x = GetFiltersParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFiltersParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFiltersParams) ProtoMessage() {}

func (x *GetFiltersParams) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFiltersParams.ProtoReflect.Descriptor instead.
func (*GetFiltersParams) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{9}
}

func (x *GetFiltersParams) GetUserId() []byte {
	if x != nil {
		return x.UserId
	}
	return nil
}

type GetFiltersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters []*Filter `protobuf:"bytes,1,rep,name=filters" json:"filters,omitempty"`
}

func (x *GetFiltersResponse) Reset() {
	*x = GetFiltersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFiltersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFiltersResponse) ProtoMessage() {}

func (x *GetFiltersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFiltersResponse.ProtoReflect.Descriptor instead.
func (*GetFiltersResponse) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{10}
}

func (x *GetFiltersResponse) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type GetTagsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang *uint32 `protobuf:"varint,1,req,name=lang" json:"lang,omitempty"`
	Ids  []int32 `protobuf:"varint,2,rep,name=ids" json:"ids,omitempty"`
}

func (x *GetTagsParams) Reset() {
	*x = GetTagsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagsParams) ProtoMessage() {}

func (x *GetTagsParams) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagsParams.ProtoReflect.Descriptor instead.
func (*GetTagsParams) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{11}
}

func (x *GetTagsParams) GetLang() uint32 {
	if x != nil && x.Lang != nil {
		return *x.Lang
	}
	return 0
}

func (x *GetTagsParams) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []string `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
}

func (x *GetTagsResponse) Reset() {
	*x = GetTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagsResponse) ProtoMessage() {}

func (x *GetTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagsResponse.ProtoReflect.Descriptor instead.
func (*GetTagsResponse) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{12}
}

func (x *GetTagsResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type FilterCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	ParentId *int32 `protobuf:"varint,2,req,name=parentId" json:"parentId,omitempty"`
	SourceId *int32 `protobuf:"varint,3,req,name=sourceId" json:"sourceId,omitempty"`
}

func (x *FilterCategory) Reset() {
	*x = FilterCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterCategory) ProtoMessage() {}

func (x *FilterCategory) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterCategory.ProtoReflect.Descriptor instead.
func (*FilterCategory) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{13}
}

func (x *FilterCategory) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *FilterCategory) GetParentId() int32 {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return 0
}

func (x *FilterCategory) GetSourceId() int32 {
	if x != nil && x.SourceId != nil {
		return *x.SourceId
	}
	return 0
}

type CreateFilterParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang       *uint32           `protobuf:"varint,1,req,name=lang" json:"lang,omitempty"`
	Sort       *Sort             `protobuf:"varint,2,req,name=sort,enum=assist.Sort" json:"sort,omitempty"`
	Categories []*FilterCategory `protobuf:"bytes,3,rep,name=categories" json:"categories,omitempty"`
	Name       *string           `protobuf:"bytes,4,req,name=name" json:"name,omitempty"`
}

func (x *CreateFilterParams) Reset() {
	*x = CreateFilterParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFilterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFilterParams) ProtoMessage() {}

func (x *CreateFilterParams) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFilterParams.ProtoReflect.Descriptor instead.
func (*CreateFilterParams) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{14}
}

func (x *CreateFilterParams) GetLang() uint32 {
	if x != nil && x.Lang != nil {
		return *x.Lang
	}
	return 0
}

func (x *CreateFilterParams) GetSort() Sort {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return Sort_UNSORTED
}

func (x *CreateFilterParams) GetCategories() []*FilterCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *CreateFilterParams) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ManipulationFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *uint32 `protobuf:"varint,1,req,name=status" json:"status,omitempty"`
}

func (x *ManipulationFilterResponse) Reset() {
	*x = ManipulationFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManipulationFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManipulationFilterResponse) ProtoMessage() {}

func (x *ManipulationFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManipulationFilterResponse.ProtoReflect.Descriptor instead.
func (*ManipulationFilterResponse) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{15}
}

func (x *ManipulationFilterResponse) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type UpdateFilterParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang              *uint32           `protobuf:"varint,1,req,name=lang" json:"lang,omitempty"`
	Sort              *Sort             `protobuf:"varint,2,req,name=sort,enum=assist.Sort" json:"sort,omitempty"`
	AddedCategories   []*FilterCategory `protobuf:"bytes,3,rep,name=addedCategories" json:"addedCategories,omitempty"`
	RemovedCategories []*FilterCategory `protobuf:"bytes,4,rep,name=removedCategories" json:"removedCategories,omitempty"`
	Name              *string           `protobuf:"bytes,5,req,name=name" json:"name,omitempty"`
}

func (x *UpdateFilterParams) Reset() {
	*x = UpdateFilterParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFilterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFilterParams) ProtoMessage() {}

func (x *UpdateFilterParams) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFilterParams.ProtoReflect.Descriptor instead.
func (*UpdateFilterParams) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateFilterParams) GetLang() uint32 {
	if x != nil && x.Lang != nil {
		return *x.Lang
	}
	return 0
}

func (x *UpdateFilterParams) GetSort() Sort {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return Sort_UNSORTED
}

func (x *UpdateFilterParams) GetAddedCategories() []*FilterCategory {
	if x != nil {
		return x.AddedCategories
	}
	return nil
}

func (x *UpdateFilterParams) GetRemovedCategories() []*FilterCategory {
	if x != nil {
		return x.RemovedCategories
	}
	return nil
}

func (x *UpdateFilterParams) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type DeleteFilterParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
}

func (x *DeleteFilterParams) Reset() {
	*x = DeleteFilterParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFilterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFilterParams) ProtoMessage() {}

func (x *DeleteFilterParams) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFilterParams.ProtoReflect.Descriptor instead.
func (*DeleteFilterParams) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteFilterParams) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetArticlesParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit    *int32 `protobuf:"varint,1,req,name=limit" json:"limit,omitempty"`
	Offset   *int32 `protobuf:"varint,2,req,name=offset" json:"offset,omitempty"`
	SortBy   *Sort  `protobuf:"varint,3,opt,name=sortBy,enum=assist.Sort" json:"sortBy,omitempty"`
	FilterId []byte `protobuf:"bytes,4,opt,name=filterId" json:"filterId,omitempty"`
}

func (x *GetArticlesParams) Reset() {
	*x = GetArticlesParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticlesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticlesParams) ProtoMessage() {}

func (x *GetArticlesParams) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticlesParams.ProtoReflect.Descriptor instead.
func (*GetArticlesParams) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{18}
}

func (x *GetArticlesParams) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetArticlesParams) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *GetArticlesParams) GetSortBy() Sort {
	if x != nil && x.SortBy != nil {
		return *x.SortBy
	}
	return Sort_UNSORTED
}

func (x *GetArticlesParams) GetFilterId() []byte {
	if x != nil {
		return x.FilterId
	}
	return nil
}

type GetArticlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids [][]byte `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
}

func (x *GetArticlesResponse) Reset() {
	*x = GetArticlesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticlesResponse) ProtoMessage() {}

func (x *GetArticlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticlesResponse.ProtoReflect.Descriptor instead.
func (*GetArticlesResponse) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{19}
}

func (x *GetArticlesResponse) GetIds() [][]byte {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetSourcesParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids *int32 `protobuf:"varint,1,req,name=ids" json:"ids,omitempty"`
}

func (x *GetSourcesParams) Reset() {
	*x = GetSourcesParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSourcesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSourcesParams) ProtoMessage() {}

func (x *GetSourcesParams) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSourcesParams.ProtoReflect.Descriptor instead.
func (*GetSourcesParams) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{20}
}

func (x *GetSourcesParams) GetIds() int32 {
	if x != nil && x.Ids != nil {
		return *x.Ids
	}
	return 0
}

type GetSourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sources []*Source `protobuf:"bytes,1,rep,name=sources" json:"sources,omitempty"`
}

func (x *GetSourcesResponse) Reset() {
	*x = GetSourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSourcesResponse) ProtoMessage() {}

func (x *GetSourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSourcesResponse.ProtoReflect.Descriptor instead.
func (*GetSourcesResponse) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{21}
}

func (x *GetSourcesResponse) GetSources() []*Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

type GetFavoritesParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *uint32 `protobuf:"varint,1,req,name=userId" json:"userId,omitempty"`
}

func (x *GetFavoritesParams) Reset() {
	*x = GetFavoritesParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFavoritesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFavoritesParams) ProtoMessage() {}

func (x *GetFavoritesParams) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFavoritesParams.ProtoReflect.Descriptor instead.
func (*GetFavoritesParams) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{22}
}

func (x *GetFavoritesParams) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

type GetFavoritesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []byte `protobuf:"bytes,1,req,name=ids" json:"ids,omitempty"`
}

func (x *GetFavoritesResponse) Reset() {
	*x = GetFavoritesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFavoritesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFavoritesResponse) ProtoMessage() {}

func (x *GetFavoritesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFavoritesResponse.ProtoReflect.Descriptor instead.
func (*GetFavoritesResponse) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{23}
}

func (x *GetFavoritesResponse) GetIds() []byte {
	if x != nil {
		return x.Ids
	}
	return nil
}

type SetFavoriteParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    *uint32 `protobuf:"varint,1,req,name=userId" json:"userId,omitempty"`
	ArticleId []byte  `protobuf:"bytes,2,req,name=articleId" json:"articleId,omitempty"`
	Favorite  *bool   `protobuf:"varint,3,req,name=favorite" json:"favorite,omitempty"`
}

func (x *SetFavoriteParams) Reset() {
	*x = SetFavoriteParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFavoriteParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFavoriteParams) ProtoMessage() {}

func (x *SetFavoriteParams) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFavoriteParams.ProtoReflect.Descriptor instead.
func (*SetFavoriteParams) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{24}
}

func (x *SetFavoriteParams) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *SetFavoriteParams) GetArticleId() []byte {
	if x != nil {
		return x.ArticleId
	}
	return nil
}

func (x *SetFavoriteParams) GetFavorite() bool {
	if x != nil && x.Favorite != nil {
		return *x.Favorite
	}
	return false
}

type SetFavoriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *uint32 `protobuf:"varint,1,req,name=status" json:"status,omitempty"`
}

func (x *SetFavoriteResponse) Reset() {
	*x = SetFavoriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_news_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFavoriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFavoriteResponse) ProtoMessage() {}

func (x *SetFavoriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFavoriteResponse.ProtoReflect.Descriptor instead.
func (*SetFavoriteResponse) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{25}
}

func (x *SetFavoriteResponse) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

var File_news_news_proto protoreflect.FileDescriptor

var file_news_news_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x0b, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x41, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x06, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x2c, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0c, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x0c, 0x49, 0x6e, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x73, 0x22, 0x36, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x27, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x58,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x35, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x2a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0c, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x35, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x58, 0x0a, 0x0e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x20,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x36, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x1a,
	0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x20, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x40, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x0f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x44, 0x0a, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x83, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0x24, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x65,
	0x0a, 0x11, 0x53, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x09,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x08, 0x66, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2a, 0x7d, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x0c, 0x0a, 0x08,
	0x55, 0x4e, 0x53, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x55,
	0x42, 0x4c, 0x49, 0x53, 0x48, 0x5f, 0x41, 0x54, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12, 0x12,
	0x0a, 0x0e, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x5f, 0x41, 0x54, 0x5f, 0x4f, 0x4c, 0x44,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4f, 0x50, 0x55, 0x4c, 0x41, 0x52, 0x10, 0x03, 0x12,
	0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x50, 0x4f, 0x50, 0x55, 0x4c, 0x41, 0x52, 0x10, 0x04, 0x12, 0x0d,
	0x0a, 0x09, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x10, 0x05, 0x12, 0x14, 0x0a,
	0x10, 0x46, 0x41, 0x56, 0x4f, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x53, 0x10, 0x06, 0x32, 0xd9, 0x06, 0x0a, 0x04, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x30, 0x0a, 0x04,
	0x49, 0x6e, 0x69, 0x74, 0x12, 0x12, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x49, 0x6e,
	0x69, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x14, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x2e,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1a, 0x2e,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x21, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x1a, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x1a, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x22, 0x2e, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x1a, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x22, 0x2e, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x1a, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x22, 0x2e, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x15, 0x2e, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x17, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x1a, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1a,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1c, 0x2e, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x2e, 0x53, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x11, 0x5a, 0x0f, 0x78, 0x33, 0x61, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x3b, 0x6e, 0x65, 0x77, 0x73,
	0x76, 0x31,
}

var (
	file_news_news_proto_rawDescOnce sync.Once
	file_news_news_proto_rawDescData = file_news_news_proto_rawDesc
)

func file_news_news_proto_rawDescGZIP() []byte {
	file_news_news_proto_rawDescOnce.Do(func() {
		file_news_news_proto_rawDescData = protoimpl.X.CompressGZIP(file_news_news_proto_rawDescData)
	})
	return file_news_news_proto_rawDescData
}

var file_news_news_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_news_news_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_news_news_proto_goTypes = []any{
	(Sort)(0),                          // 0: assist.Sort
	(*ArticleMeta)(nil),                // 1: assist.ArticleMeta
	(*Source)(nil),                     // 2: assist.Source
	(*Filter)(nil),                     // 3: assist.Filter
	(*InitParams)(nil),                 // 4: assist.InitParams
	(*InitResponse)(nil),               // 5: assist.InitResponse
	(*GetArticleParams)(nil),           // 6: assist.GetArticleParams
	(*GetArticleResponse)(nil),         // 7: assist.GetArticleResponse
	(*GetArticleContentParams)(nil),    // 8: assist.GetArticleContentParams
	(*GetArticleContentResponse)(nil),  // 9: assist.GetArticleContentResponse
	(*GetFiltersParams)(nil),           // 10: assist.GetFiltersParams
	(*GetFiltersResponse)(nil),         // 11: assist.GetFiltersResponse
	(*GetTagsParams)(nil),              // 12: assist.GetTagsParams
	(*GetTagsResponse)(nil),            // 13: assist.GetTagsResponse
	(*FilterCategory)(nil),             // 14: assist.FilterCategory
	(*CreateFilterParams)(nil),         // 15: assist.CreateFilterParams
	(*ManipulationFilterResponse)(nil), // 16: assist.ManipulationFilterResponse
	(*UpdateFilterParams)(nil),         // 17: assist.UpdateFilterParams
	(*DeleteFilterParams)(nil),         // 18: assist.DeleteFilterParams
	(*GetArticlesParams)(nil),          // 19: assist.GetArticlesParams
	(*GetArticlesResponse)(nil),        // 20: assist.GetArticlesResponse
	(*GetSourcesParams)(nil),           // 21: assist.GetSourcesParams
	(*GetSourcesResponse)(nil),         // 22: assist.GetSourcesResponse
	(*GetFavoritesParams)(nil),         // 23: assist.GetFavoritesParams
	(*GetFavoritesResponse)(nil),       // 24: assist.GetFavoritesResponse
	(*SetFavoriteParams)(nil),          // 25: assist.SetFavoriteParams
	(*SetFavoriteResponse)(nil),        // 26: assist.SetFavoriteResponse
	(*timestamppb.Timestamp)(nil),      // 27: google.protobuf.Timestamp
}
var file_news_news_proto_depIdxs = []int32{
	27, // 0: assist.ArticleMeta.publishAt:type_name -> google.protobuf.Timestamp
	27, // 1: assist.Source.publishAt:type_name -> google.protobuf.Timestamp
	1,  // 2: assist.GetArticleResponse.meta:type_name -> assist.ArticleMeta
	1,  // 3: assist.GetArticleContentParams.meta:type_name -> assist.ArticleMeta
	3,  // 4: assist.GetFiltersResponse.filters:type_name -> assist.Filter
	0,  // 5: assist.CreateFilterParams.sort:type_name -> assist.Sort
	14, // 6: assist.CreateFilterParams.categories:type_name -> assist.FilterCategory
	0,  // 7: assist.UpdateFilterParams.sort:type_name -> assist.Sort
	14, // 8: assist.UpdateFilterParams.addedCategories:type_name -> assist.FilterCategory
	14, // 9: assist.UpdateFilterParams.removedCategories:type_name -> assist.FilterCategory
	0,  // 10: assist.GetArticlesParams.sortBy:type_name -> assist.Sort
	2,  // 11: assist.GetSourcesResponse.sources:type_name -> assist.Source
	4,  // 12: assist.News.Init:input_type -> assist.InitParams
	19, // 13: assist.News.GetArticles:input_type -> assist.GetArticlesParams
	6,  // 14: assist.News.GetArticle:input_type -> assist.GetArticleParams
	6,  // 15: assist.News.GetArticleContent:input_type -> assist.GetArticleParams
	10, // 16: assist.News.GetFilters:input_type -> assist.GetFiltersParams
	15, // 17: assist.News.CreateFilter:input_type -> assist.CreateFilterParams
	17, // 18: assist.News.UpdateFilter:input_type -> assist.UpdateFilterParams
	18, // 19: assist.News.DeleteFilter:input_type -> assist.DeleteFilterParams
	12, // 20: assist.News.GetTags:input_type -> assist.GetTagsParams
	21, // 21: assist.News.GetSources:input_type -> assist.GetSourcesParams
	23, // 22: assist.News.GetFavorites:input_type -> assist.GetFavoritesParams
	25, // 23: assist.News.SetFavorite:input_type -> assist.SetFavoriteParams
	5,  // 24: assist.News.Init:output_type -> assist.InitResponse
	20, // 25: assist.News.GetArticles:output_type -> assist.GetArticlesResponse
	7,  // 26: assist.News.GetArticle:output_type -> assist.GetArticleResponse
	9,  // 27: assist.News.GetArticleContent:output_type -> assist.GetArticleContentResponse
	11, // 28: assist.News.GetFilters:output_type -> assist.GetFiltersResponse
	16, // 29: assist.News.CreateFilter:output_type -> assist.ManipulationFilterResponse
	16, // 30: assist.News.UpdateFilter:output_type -> assist.ManipulationFilterResponse
	16, // 31: assist.News.DeleteFilter:output_type -> assist.ManipulationFilterResponse
	13, // 32: assist.News.GetTags:output_type -> assist.GetTagsResponse
	22, // 33: assist.News.GetSources:output_type -> assist.GetSourcesResponse
	24, // 34: assist.News.GetFavorites:output_type -> assist.GetFavoritesResponse
	26, // 35: assist.News.SetFavorite:output_type -> assist.SetFavoriteResponse
	24, // [24:36] is the sub-list for method output_type
	12, // [12:24] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_news_news_proto_init() }
func file_news_news_proto_init() {
	if File_news_news_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_news_news_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ArticleMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*InitParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*InitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetArticleParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetArticleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetArticleContentParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetArticleContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetFiltersParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetFiltersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetTagsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*FilterCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CreateFilterParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ManipulationFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateFilterParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteFilterParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetArticlesParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetArticlesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetSourcesParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetSourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetFavoritesParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*GetFavoritesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*SetFavoriteParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_news_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*SetFavoriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_news_news_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_news_news_proto_goTypes,
		DependencyIndexes: file_news_news_proto_depIdxs,
		EnumInfos:         file_news_news_proto_enumTypes,
		MessageInfos:      file_news_news_proto_msgTypes,
	}.Build()
	File_news_news_proto = out.File
	file_news_news_proto_rawDesc = nil
	file_news_news_proto_goTypes = nil
	file_news_news_proto_depIdxs = nil
}
